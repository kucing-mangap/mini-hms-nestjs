// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AppointmentType {
  KONSULTASI
  LAB
  RADIOLOGI
}

enum AppointmentStatus {
  DIJADWALKAN
  DIBATALKAN
  SELESAI
  TIDAK_HADIR
}

model Doctor {
  id         Int      @id @default(autoincrement())
  firstName  String   @map("first_name") @db.VarChar(255)
  lastName   String   @map("last_name") @db.VarChar(255)
  email      String   @unique
  phone      String   @db.VarChar(15)
  password   String   @map("password") @db.VarChar(255)
  specialty  String   @db.VarChar(255)
  experience Int
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  appointments Appointment[]

  @@map("doctors")
}

model Patient {
  id             Int      @id @default(autoincrement())
  firstName      String   @map("first_name") @db.VarChar(255)
  lastName       String   @map("last_name") @db.VarChar(255)
  email          String   @unique
  phone          String?  @db.VarChar(15)
  password       String   @map("password") @db.VarChar(255)
  dateOfBirth    DateTime @map("date_of_birth")
  medicalHistory String   @map("medical_history")
  allergies      String
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  appointments Appointment[]

  @@map("patients")
}

model Admin {
  id        Int      @id @default(autoincrement())
  firstName String   @map("first_name") @db.VarChar(255)
  lastName  String?  @map("last_name") @db.VarChar(255)
  email     String   @unique
  password  String   @map("password")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("admin")
}

model Appointment {
  id                Int               @id @default(autoincrement())
  patientId         Int               @map("patient_id")
  doctorId          Int               @map("doctor_id")
  appointmentDate   DateTime          @map("appointment_date")
  appointmentType   AppointmentType   @default(KONSULTASI) @map("appointment_type")
  appointmentStatus AppointmentStatus @default(DIJADWALKAN) @map("appointment_status")
  createdAt         DateTime          @default(now()) @map("created_at")
  updatedAt         DateTime          @updatedAt @map("updated_at")

  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  doctor  Doctor  @relation(fields: [doctorId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("appointments")
}

model MedicalRecord {
  id                   Int      @id @default(autoincrement())
  appointmentId        Int      @map("appointment_id")
  doctorId             Int      @map("doctor_id")
  recordNotes          String   @map("record_notes")
  diagnosis            String   @db.VarChar(255)
  prescribedMedication String   @map("prescribed_medication")
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime @updatedAt @map("updated_at")

  @@map("medical_records")
}
