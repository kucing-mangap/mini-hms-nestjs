generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  firstName String   @map("first_name") @db.VarChar(255)
  lastName  String?  @map("last_name") @db.VarChar(255)
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("admins")
}

model Appointment {
  id                Int               @id @default(autoincrement())
  patientId         Int               @map("patient_id")
  doctorId          Int               @map("doctor_id")
  appointmentDate   DateTime          @map("appointment_date")
  appointmentType   AppointmentType   @default(KONSULTASI) @map("appointment_type")
  appointmentStatus AppointmentStatus @default(DIJADWALKAN) @map("appointment_status")
  createdAt         DateTime          @default(now()) @map("created_at")
  updatedAt         DateTime          @updatedAt @map("updated_at")
  doctors           Doctor            @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  patients          Patient           @relation(fields: [patientId], references: [id], onDelete: Cascade)
  medicalRecords    MedicalRecord?

  @@map("appointments")
}

model Doctor {
  id           Int           @id @default(autoincrement())
  firstName    String        @map("first_name") @db.VarChar(255)
  lastName     String        @map("last_name") @db.VarChar(255)
  email        String        @unique
  phone        String        @db.VarChar(15)
  specialty    String        @db.VarChar(255)
  experience   Int
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  password     String        @db.VarChar(255)
  appointments Appointment[]

  @@map("doctors")
}

model MedicalRecord {
  id                   Int         @id @default(autoincrement())
  appointmentId        Int         @unique @map("appointment_id")
  doctorId             Int         @map("doctor_id")
  recordNotes          String      @map("record_notes")
  diagnosis            String      @db.VarChar(255)
  prescribedMedication String      @map("prescribed_medication")
  createdAt            DateTime    @default(now()) @map("created_at")
  updatedAt            DateTime    @updatedAt @map("updated_at")
  appointments         Appointment @relation(fields: [appointmentId], references: [id])

  @@map("medical_records")
}

model Patient {
  id             Int           @id @default(autoincrement())
  firstName      String        @map("first_name") @db.VarChar(255)
  lastName       String        @map("last_name") @db.VarChar(255)
  email          String        @unique
  phone          String?       @db.VarChar(15)
  dateOfBirth    DateTime      @map("date_of_birth")
  medicalHistory String        @map("medical_history")
  allergies      String
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")
  password       String        @db.VarChar(255)
  appointments   Appointment[]

  @@map("patients")
}

enum AppointmentStatus {
  DIJADWALKAN
  DIBATALKAN
  SELESAI
  TIDAK_HADIR
}

enum AppointmentType {
  KONSULTASI
  LAB
  RADIOLOGI
}
